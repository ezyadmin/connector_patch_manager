#!/usr/bin/env bash

# How to make yum show installed & latest packages (CentOS)

# TODO
# Notification incident

# http://arstechnica.com/civis/viewtopic.php?t=1081335

# get version
# http://unix.stackexchange.com/questions/54987/how-to-know-centos-version

#installl dependency

#================== function =============================
trim() {
    # Determine if 'extglob' is currently on.
    local extglobWasOff=1
    shopt extglob >/dev/null && extglobWasOff=0 
    (( extglobWasOff )) && shopt -s extglob # Turn 'extglob' on, if currently turned off.
    # Trim leading and trailing whitespace
    local var=$1
    var=${var##+([[:space:]])}
    var=${var%%+([[:space:]])}
    (( extglobWasOff )) && shopt -u extglob # If 'extglob' was off before, turn it back off.
    echo -n "$var"  # Output trimmed string.
}
#================== function =============================

#================== variable ========================

#OSNAME=`perl -e ' use Linux::Distribution qw(distribution_name distribution_version);  my $linux = Linux::Distribution->new;if(my $distro = $linux->distribution_name()) { my $version = $linux->distribution_version();print "$distro";}'`
OSNAME=`perl get_os.pl`
OSVERSION=""
if [[ "${OSNAME}" == "centos" ]] ;then
	OSNAME="CentOS"
	OSVERSION=`rpm -q --queryformat '%{VERSION}' centos-release`
elif [[ "${OSNAME}" == "redhat" ]]; then
	OSNAME="RedHat"
	OSVERSION=`rpm -q --queryformat '%{VERSION}' epel-release`
else
	echo "Not support os : ${OSNAME}"
	exit;
fi

if [[ "${OSVERSION}" == "package centos-release is not installed" ]]
then
	OSVERSION=`cat /etc/redhat-release | tr '\n' ' ' | sed -e 's/[^\ +0-9\.]/ /g' -e 's/^ *//g' -e 's/ *$//g' | awk -F \. {'print $1'}`
fi

OSARCH=`uname -m`
ALLMONITORBY=""

CPNAME="none"
TIER=""

#=================general data===============
HOSTNAME=`hostname -f`
echo "{"
echo "\"agent\" : \"agent\","
echo "\"patch_for\" : \"da\","
echo "\"connector_id\" : \"5ca72512242546043ede359c\","
echo "\"osarch\" : \"${OSARCH}\","
echo "\"osname\" : \"${OSNAME}\","
echo "\"hostname\" : \"${HOSTNAME}\","
echo "\"osversion\" : \"${OSVERSION}\","
echo "\"cpname\" : \"${CPNAME}\","
echo "\"tier\" : \"${TIER}\","

echo "\"ci\" : [ {} "

#==============direct admin================
FILE_Da="/usr/local/directadmin/custombuild/build"
if [ -f $FILE_Da ];
then
	CPNAME="da"
	#TIER=`/usr/local/directadmin/custombuild/build versions | grep "Installed version of DirectAdmin"`
	#TIER=${TIER##*\:}
	#TIER=$(trim "${TIER}")
	TIER="stable"
fi
if [[ "${CPNAME}" == "da" ]]; then
	CPMonitorBy="da_${TIER}"
	ALLMONITORBY="[\"${CPMonitorBy}\"]"
	CPManagedBy="cp"
	#ezyadmin_da = /usr/local/directadmin/custombuild/build versions
	/usr/local/directadmin/custombuild/build versions | while read ida
	do
		ida=$(echo $ida)
		
	    if [ "${ida}x" != "x" ] && [[ $ida == Installed\ version\ of* ]]
	    then
	    	#echo "ida = ${ida}";
	    	PKNAME=${ida#*Installed\ version\ of}
	    	PNAME=${PKNAME%%\:*}
	    	PNAME=$(trim "${PNAME}")
	    	PVERSION=${PKNAME##*\:}
	    	PVERSION=$(trim "${PVERSION}")
	    	#echo ${PNAME}
	    	#echo ${PVERSION}
	    	echo ",{ \"name\" : \"${PNAME}\" ,  \"fullname\" : \"${PNAME}\" , \"version\" : \"${PVERSION}\", \"monitorby\" : \"${CPMonitorBy}\", \"managedby\" : \"${CPManagedBy}\", \"cpname\" : \"da\" ,\"cpversion\" : \"${TIER}\",  \"from\" : \"da\" , \"osname\" : \"${OSNAME}\", \"osversion\" : \"${OSVERSION}\", \"osarch\" : \"${OSARCH}\"} "
	    fi
    done
	#echo "]"
fi
#===================end==============================
echo "],"

#================================== get all managedby===================================
echo "\"allmonitorby\" : ${ALLMONITORBY}"
#================================== end get all managedby===============================
echo "}"
exit;