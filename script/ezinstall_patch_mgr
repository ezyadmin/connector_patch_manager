#!/usr/bin/env bash

echo "Parameter arg: $1"
INPUTKEY=$1

# ========= variable ============
DATE_NOW=$(date '+%d/%m/%Y %H:%M:%S')

red=`tput setaf 1`
green=`tput setaf 2`
yellow=`tput setaf 3`
blue=`tput setaf 4`
magenta=`tput setaf 5`
cyan=`tput setaf 6`
reset=`tput sgr0`

#
cd /usr/local/ezyadmin/connector_patch_manager-latest/script
OSNAME=`perl ../agent/get_os.pl`
OSVERSION=""
if [[ "${OSNAME}" == "centos" ]] ;then
  OSNAME="CentOS"
  OSVERSION=`rpm -q --queryformat '%{VERSION}' centos-release | awk -F. '{print $1}' | tr -d "\n"`
elif [[ "${OSNAME}" == "redhat" ]]; then
  OSNAME="RedHat"
  OSVERSION=`rpm -q --queryformat '%{VERSION}' epel-release | awk -F. '{print $1}' | tr -d "\n"`
elif [[ "${OSNAME}" == "cloudlinux" ]]; then
  OSNAME="CloudLinux"
  OSVERSION=`rpm -q --queryformat '%{VERSION}' epel-release | awk -F. '{print $1}' | tr -d "\n"`
else
  echo "${red}Error : Operating system is not support.${reset}"
  echo "${red}OS : ${OSNAME}${reset}"
  exit;
fi

copy_to_ezydir()
{
  mkdir -p /usr/local/ezyadmin
  cd /usr/local/ezyadmin
  cp -af ../agent /usr/local/ezyadmin/
}

setup_linux()
{
  echo "${cyan}---Setup connector patch manager for Linux.${reset}"
  ENABLE_LN="/usr/local/ezyadmin/agent/linux"
  TMP_YUM=`which yum 2> /dev/null` || TMP_YUM=$?
  if [ "${TMP_YUM}x" == "x" ] || [ "${TMP_YUM}" == "127" ]; then
    echo "${yellow}Skip : This server is compatible Linux Connector.${reset}"
    [ -e $ENABLE_LN ] && rm $ENABLE_LN
  else
    setup_respo
    echo "$DATE_NOW" > $ENABLE_LN
    # call_ezapi_verify_installed 5e0307987f0fc331388ff450 true
    call_ezapi_register linux true
    echo "${cyan}...... done.${reset}"
  fi
  echo "__________________________________________"
}
setup_cpanel()
{
  echo "${green}---Setup connector patch manager for cPanel/WHM.${reset}"
  ENABLE_CP="/usr/local/ezyadmin/agent/cpanel"
  TMP_CPANEL=`/usr/local/cpanel/cpanel -V 2> /dev/null` || TMP_CPANEL=$?
  if [ "${TMP_CPANEL}x" == "x" ] || [ "${TMP_CPANEL}" == "127" ]; then
    echo "${yellow}Skip : This server is not found cPanel/WHM.${reset}"
    [ -e $ENABLE_CP ] && rm $ENABLE_CP
  else
    echo "${green}Setup Patch Manager for cPanel/WHM ...${reset}"
    echo "$DATE_NOW" > $ENABLE_CP
    # call_ezapi_verify_installed 5c74c7ef3ae4f52ae9e1833c true
    call_ezapi_register cpanel true
    echo "${green}...... done.${reset}"
  fi
  echo "__________________________________________"
}
setup_da()
{
  ENABLE_DA="/usr/local/ezyadmin/agent/da"
  echo "${green}---Setup connector patch manager for DirectAdmin.${reset}"
  TMP_DA=`/usr/local/directadmin/directadmin v 2> /dev/null` || TMP_DA=$?
  if [ "${TMP_DA}x" == "x" ] || [ "${TMP_DA}" == "127" ]; then
    echo "${yellow}Skip : This server is not found Direct Admin.${reset}"
    [ -e $ENABLE_DA ] && rm $ENABLE_DA
  else
    echo "${green}Setup Patch Manager for Direct Admin ...${reset}"
    echo "$DATE_NOW" > /usr/local/ezyadmin/agent/da
    # call_ezapi_verify_installed 5ca72512242546043ede359c true
    call_ezapi_register directadmin true
    echo "${green}...... done.${reset}"
  fi
  echo "__________________________________________"
}
setup_cloudLinux()
{
  ENABLE_CL="/usr/local/ezyadmin/agent/cloudlinux"
  echo "${green}---Setup connector patch manager for cloudLinux.${reset}"
  DETECTCLOUDLINUX=`yum list installed -d3 | grep "cloudlinux-release"`
  if [ "${DETECTCLOUDLINUX}x" != "x" ];	then
    echo "${green}Setup Patch Manager for CloudLinux ...${reset}"
    echo "$DATE_NOW" > $ENABLE_CL
    # call_ezapi_verify_installed 5d639f97a4b5faf008ba16e2 true
    call_ezapi_register cloudlinux true
    echo "${green}...... done.${reset}"
  else
    echo "${red}SKIP : This server is not found CloudLinux.${reset}"
    [ -e $ENABLE_DA ] && rm $ENABLE_DA
  fi
  echo "__________________________________________"
}

check_support()
{
  echo "${green}------------- Check support -------------${reset}"
  TMP_YUM=`which yum 2> /dev/null` || TMP_YUM=$?
  # TMP_YUM=`yum -v 2> /dev/null` || TMP_YUM=$?
  if [ "${TMP_YUM}x" == "x" ] || [ "${TMP_YUM}" == "127" ]; then
    echo "${red}Error : Operating system is not support.${reset}"
    exit;
  fi
  # echo "${green}TMP_YUM=${TMP_YUM}${reset}"

  OSNAME=`perl ../agent/get_os.pl`
  OSVERSION=""
  if [[ "${OSNAME}" == "centos" ]] ;then
    OSNAME="CentOS"
    OSVERSION=`rpm -q --queryformat '%{VERSION}' centos-release | awk -F. '{print $1}' | tr -d "\n"`
  elif [[ "${OSNAME}" == "redhat" ]]; then
    OSNAME="RedHat"
    OSVERSION=`rpm -q --queryformat '%{VERSION}' epel-release | awk -F. '{print $1}' | tr -d "\n"`
  elif [[ "${OSNAME}" == "cloudlinux" ]]; then
    OSNAME="CloudLinux"
    OSVERSION=`rpm -q --queryformat '%{VERSION}' epel-release | awk -F. '{print $1}' | tr -d "\n"`
  else
    echo "${red}Error : Operating system is not support.${reset}"
    echo "${red}OS : ${OSNAME}${reset}"
    exit;
  fi
  echo "${green} OSNAME : ${OSNAME}${reset}"
  echo "${green} OSVERSION : ${OSVERSION}${reset}"
  echo "__________________________________________"
}

setup_respo6()
{
  yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm
  # cp -f ../config/fusioninventory.repo_v6 /etc/yum.repos.d/ez_fusioninventory.repo
  yum update -y
  yum -y install fusioninventory-agent fusioninventory-agent-task-inventory
}

setup_respo7()
{
  yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
  # cp -f ../config/fusioninventory.repo_v7 /etc/yum.repos.d/ez_fusioninventory.repo
  yum update -y
  yum -y install fusioninventory-agent fusioninventory-agent-task-inventory
}

setup_respo8()
{

  # subscription-manager repos --enable "codeready-builder-for-rhel-8-$(arch)-rpms"
  yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
  yum update -y
  dnf config-manager --set-enabled PowerTools
  dnf install fusioninventory-agent fusioninventory-agent-task-inventory
}

setup_respo()
{
  echo "${green}----------- Setup repository -----------${reset}"
  echo
  if [[ "${OSVERSION}" -lt "6" ]] ;then
    echo "${red}Error : Operating system is not support.${reset}"
    echo "${red}OS : ${OSNAME} ${OSVERSION}${reset}"
    exit;
  elif [[ "${OSVERSION}" -eq "6" ]]; then
    setup_respo6
  elif [[ "${OSVERSION}" -eq "7" ]]; then
    setup_respo7
  elif [[ "${OSVERSION}" -eq "8" ]]; then
    setup_respo8
  else
    echo "${red}Error : Operating system is not support.${reset}"
    echo "${red}OS : ${OSNAME}${reset}"
    echo "Please concact us."
    exit;
  fi
}

init_daemon(){
  echo "${green}-------------- Init daemon --------------${reset}"
  cat /dev/null > /var/log/ezyadmind.err
  chmod 755 /usr/local/ezyadmin/agent/ezyadmin_agent
  if [[ "${OSVERSION}" -eq "6" ]] ;then
    # /agent/ezyadmind dest=/etc/init.d/ezyadmind
    cp -f ../agent/ezyadmind /etc/init.d/ezyadmind
    chmod 755 /etc/init.d/ezyadmind
    chown root:root /etc/init.d/ezyadmind
    chkconfig --add ezyadmind
    chkconfig ezyadmind on
    /etc/init.d/ezyadmind stop
    /etc/init.d/ezyadmind start
  elif [[ "${OSVERSION}" -ge "7" ]]; then
    # /agent/ezyadmin.service dest=/etc/systemd/system/ezyadmin.service
    cp -f ../agent/ezyadmin.service /etc/systemd/system/ezyadmin.service
    chmod 755 /etc/systemd/system/ezyadmin.service
    chown root:root /etc/systemd/system/ezyadmin.service
    systemctl daemon-reload
    systemctl enable ezyadmin.service
    systemctl stop ezyadmin.service
    systemctl start ezyadmin.service
  else
    echo "${red}Error : On init daemon.${reset}"
    echo "${red}OS : ${OSNAME} ${OSVERSION} ${reset}"
    echo "Please concact us."
    exit;
  fi
    
}

call_ezapi_verify_installed()
{
  echo "connector_id is $1"
  echo "installed is $2"
  api_server='https://api.netway.ezyadmin.com'
  hostname=`hostname -f`
  url="${api_server}/external/server/connector/${1}/hostname/${hostname}/installed/${2}"
  # curl -H "Content-Type: application/json" -X PUT ${url}
  HTTP_RESPONSE=$(curl --silent --write-out "HTTPSTATUS:%{http_code}" -H 'Content-Type: application/json' -X PUT ${url})
  
  HTTP_STATUS=$(echo $HTTP_RESPONSE | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
  HTTP_BODY=$(echo $HTTP_RESPONSE | sed -e 's/HTTPSTATUS\:.*//g')
  # echo "=========="
  # echo $request_cmd
  # echo "=========="
  # echo $HTTP_STATUS
  # echo "=========="
  # echo $HTTP_BODY
  # echo "=========="
  if "$HTTP_STATUS" == "200" ] || [ "$HTTP_STATUS" == "201" ; then
    # echo "${red}HTTP status : ${HTTP_STATUS} ${reset}"
    echo "... success."  
  else
    echo "${red}Error :[${HTTP_STATUS}] ${HTTP_BODY} ${reset}"
  fi
  # echo "__________________________________________"  
}

call_ezapi_register()
{
  echo "connector_id is $1"
  echo "register is $2"
  api_server='https://api.netway.ezyadmin.com'
  hostname=`hostname -f`
  url="${api_server}/external/server/connector/${1}/hostname/${hostname}/register/${2}"
  # curl -H "Content-Type: application/json" -X PUT ${url}
  HTTP_RESPONSE=$(curl --silent --write-out "HTTPSTATUS:%{http_code}" -H 'Content-Type: application/json' -X PUT ${url})
  
  HTTP_STATUS=$(echo $HTTP_RESPONSE | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
  HTTP_BODY=$(echo $HTTP_RESPONSE | sed -e 's/HTTPSTATUS\:.*//g')
  if [ "$HTTP_STATUS" == "200" ] || [ "$HTTP_STATUS" == "201" ] ; then
    echo "... success." 
  else
    echo "${red}Error while registration :[${HTTP_STATUS}] ${HTTP_BODY} ${reset}"
  fi
  # echo "__________________________________________"
}

call_ezapi_verify_compatible()
{
  echo "connector_id is $1"
  echo "installed is $2"
  api_server='https://api.netway.ezyadmin.com'
  hostname=`hostname -f`
  url="${api_server}/verify/client/connector/${1}/hostname/${hostname}/compatible/${2}"
  curl -H "Content-Type: application/json" -X PUT ${url}
}

# ========== main ==================================
check_support

# === install && enable connector
if [[ "${INPUTKEY}" == "--all" ]]
then
  setup_linux
  setup_cpanel
  setup_da
  setup_cloudLinux
elif [[ "${INPUTKEY}" == "--linux" ]]
then
  setup_linux
elif [[ "${INPUTKEY}" == "--cpanel" ]]
then
  setup_cpanel
elif [[ "${INPUTKEY}" == "--da" ]]
then
  setup_da
elif [[ "${INPUTKEY}" == "--cloudlinux" ]]
then
  setup_cloudLinux
else
  echo "${red}Error : Please check input arguments.${reset}"
  echo "${red}Input : ${INPUTKEY}${reset}"
  # echo "${red}OS : ${OSNAME}${reset}"
  # echo "Please concact us."
  exit;
fi

# === init daemon
init_daemon
# ===  configuration
cp -f ../config/agent.cfg /etc/fusioninventory/agent.cfg
# === start agent onec 
echo $(date) > /usr/local/ezyadmin/agent/watch

echo "${green}------------- Done All -------------${reset}"
